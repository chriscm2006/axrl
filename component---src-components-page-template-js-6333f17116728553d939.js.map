{"version":3,"sources":["webpack:///./src/components/pageTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/Meta.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layout__WEBPACK_IMPORTED_MODULE_1__","_ref","_ref$data","data","_data$markdownRemark","markdownRemark","_markdownRemark$front","frontmatter","_markdownRemark$html","html","a","createElement","title","dangerouslySetInnerHTML","__html","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Header","siteTitle","react_default","className","gatsby_browser_entry","to","href","defaultProps","Layout","_ref$pageContext","pageContext","Fragment","Meta","header","site","siteMetadata","_755544856","node","description","lang","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","meta","name","content","_public_static_d_763876243_json__WEBPACK_IMPORTED_MODULE_0__","keywords","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-components-page-template-js-6333f17116728553d939.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from './layout'\n\nexport default function Template({ data = {} }) {\n  const { markdownRemark = {} } = data // data.markdownRemark holds our post data\n  const { frontmatter = {}, html = '' } = markdownRemark\n  return (\n    <Layout title={frontmatter.title}>\n      <h1>{frontmatter.title}</h1>\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div className=\"layoutSize\">\n      <Link to=\"/\" className=\"brand\">\n        {siteTitle}\n      </Link>\n    </div>\n    <nav className=\"mainNav\">\n      <ul className=\"layoutSize\">\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/docs/examples\">Examples</Link>\n        </li>\n        <li>\n          <Link to=\"/docs/schema\">Schema</Link>\n        </li>\n        <li>\n          <a href=\"https://github.com/dequelabs/axrl/issues\">\n            Give feedback\n          </a>\n        </li>\n      </ul>\n    </nav>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Meta from './Meta'\nimport './layout.css'\nimport './prism-a11y.css'\n\nconst Layout = ({ children, title, pageContext = {} }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Meta title={title || pageContext.title} />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>{children}</main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction Meta({ description, lang, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${\n              data.site.siteMetadata.title\n            }`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription\n              }\n            ]}\n          />\n        )\n      }}\n    />\n  )\n}\n\nMeta.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n}\n\nMeta.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n\nexport default Meta\n\nconst detailsQuery = graphql`\n  query DefaultMetaOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}